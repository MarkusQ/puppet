#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id4d35cf7b55', 'grammar.ra', 804

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id4d35cf7b55

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 65, :_reduce_1,
 1, 65, :_reduce_none,
 1, 66, :_reduce_none,
 2, 66, :_reduce_4,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 4, 76, :_reduce_18,
 5, 76, :_reduce_19,
 3, 76, :_reduce_20,
 2, 76, :_reduce_21,
 1, 82, :_reduce_none,
 1, 82, :_reduce_none,
 3, 82, :_reduce_24,
 3, 82, :_reduce_25,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 83, :_reduce_33,
 5, 69, :_reduce_34,
 5, 69, :_reduce_35,
 5, 69, :_reduce_36,
 5, 80, :_reduce_37,
 2, 70, :_reduce_38,
 1, 99, :_reduce_39,
 2, 99, :_reduce_40,
 6, 71, :_reduce_41,
 2, 71, :_reduce_42,
 3, 100, :_reduce_43,
 3, 100, :_reduce_44,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 3, 101, :_reduce_47,
 1, 102, :_reduce_none,
 3, 102, :_reduce_49,
 1, 103, :_reduce_50,
 1, 103, :_reduce_51,
 3, 104, :_reduce_52,
 3, 104, :_reduce_53,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 4, 107, :_reduce_56,
 1, 93, :_reduce_none,
 3, 93, :_reduce_58,
 0, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 109, :_reduce_61,
 1, 85, :_reduce_62,
 1, 87, :_reduce_63,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 1, 108, :_reduce_none,
 3, 72, :_reduce_70,
 3, 81, :_reduce_71,
 0, 95, :_reduce_72,
 1, 95, :_reduce_73,
 3, 95, :_reduce_74,
 3, 112, :_reduce_75,
 3, 114, :_reduce_76,
 1, 115, :_reduce_none,
 1, 115, :_reduce_none,
 0, 98, :_reduce_79,
 1, 98, :_reduce_80,
 3, 98, :_reduce_81,
 1, 116, :_reduce_none,
 3, 116, :_reduce_83,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 4, 89, :_reduce_100,
 3, 89, :_reduce_101,
 1, 91, :_reduce_102,
 2, 91, :_reduce_103,
 2, 118, :_reduce_104,
 1, 119, :_reduce_105,
 2, 119, :_reduce_106,
 1, 88, :_reduce_107,
 4, 84, :_reduce_108,
 4, 84, :_reduce_109,
 6, 74, :_reduce_110,
 5, 74, :_reduce_111,
 0, 120, :_reduce_none,
 4, 120, :_reduce_113,
 3, 120, :_reduce_114,
 1, 111, :_reduce_none,
 3, 111, :_reduce_116,
 3, 111, :_reduce_117,
 3, 111, :_reduce_118,
 3, 111, :_reduce_119,
 3, 111, :_reduce_120,
 3, 111, :_reduce_121,
 3, 111, :_reduce_122,
 3, 111, :_reduce_123,
 2, 111, :_reduce_124,
 3, 111, :_reduce_125,
 3, 111, :_reduce_126,
 3, 111, :_reduce_127,
 3, 111, :_reduce_128,
 3, 111, :_reduce_129,
 3, 111, :_reduce_130,
 2, 111, :_reduce_131,
 3, 111, :_reduce_132,
 3, 111, :_reduce_133,
 3, 111, :_reduce_134,
 5, 73, :_reduce_135,
 1, 122, :_reduce_none,
 2, 122, :_reduce_137,
 5, 123, :_reduce_138,
 4, 123, :_reduce_139,
 1, 124, :_reduce_none,
 3, 124, :_reduce_141,
 3, 90, :_reduce_142,
 1, 126, :_reduce_none,
 4, 126, :_reduce_144,
 1, 128, :_reduce_none,
 3, 128, :_reduce_146,
 3, 127, :_reduce_147,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 125, :_reduce_155,
 1, 125, :_reduce_none,
 1, 129, :_reduce_157,
 3, 129, :_reduce_158,
 2, 75, :_reduce_159,
 6, 77, :_reduce_160,
 5, 77, :_reduce_161,
 6, 78, :_reduce_162,
 5, 78, :_reduce_163,
 6, 79, :_reduce_164,
 5, 79, :_reduce_165,
 1, 97, :_reduce_166,
 1, 92, :_reduce_167,
 1, 92, :_reduce_168,
 1, 132, :_reduce_none,
 3, 132, :_reduce_170,
 1, 134, :_reduce_171,
 1, 135, :_reduce_172,
 1, 135, :_reduce_173,
 1, 135, :_reduce_174,
 1, 135, :_reduce_none,
 0, 67, :_reduce_176,
 0, 136, :_reduce_177,
 1, 130, :_reduce_none,
 3, 130, :_reduce_179,
 3, 130, :_reduce_180,
 1, 137, :_reduce_none,
 3, 137, :_reduce_182,
 3, 138, :_reduce_183,
 1, 138, :_reduce_184,
 3, 138, :_reduce_185,
 1, 138, :_reduce_186,
 1, 133, :_reduce_none,
 2, 133, :_reduce_188,
 1, 131, :_reduce_none,
 2, 131, :_reduce_190,
 1, 139, :_reduce_none,
 1, 139, :_reduce_none,
 1, 86, :_reduce_193,
 3, 110, :_reduce_194,
 4, 110, :_reduce_195,
 2, 110, :_reduce_196,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 0, 96, :_reduce_none,
 1, 96, :_reduce_200,
 1, 121, :_reduce_201 ]

racc_reduce_n = 202

racc_shift_n = 334

racc_action_table = [
    56,    59,    56,    59,   298,   194,   215,   126,    65,   167,
   265,   194,    34,   252,   309,    45,   263,   254,   255,    11,
    55,    56,    59,   266,   142,   172,   142,    56,    59,   254,
   255,    87,   128,    55,    45,    55,   267,    66,   213,    66,
   213,    74,   204,    74,   224,   175,   116,   201,   116,    82,
    70,   165,    70,    48,    55,   205,    50,   272,    66,    68,
    55,    49,    74,    49,    66,    68,    60,    63,    74,    56,
    59,    70,    48,    63,    86,    50,    49,    70,   139,  -149,
    77,   167,    49,    56,    59,    56,    59,    45,    49,    87,
   257,   289,    55,   167,  -154,    49,    34,   172,   256,    96,
   296,    97,    55,    11,    55,   177,    66,   213,   297,   172,
    74,   276,   182,   261,    98,   116,    55,   186,    55,    70,
    66,   213,    66,    68,    74,    48,    74,   182,    50,   116,
    49,    63,   186,    70,   177,    70,    56,    59,    94,  -151,
    87,   254,   255,  -148,    49,   132,    49,    25,    49,    30,
     1,   282,     8,    12,  -150,    19,   167,    23,    82,    27,
  -152,     2,    56,    59,    11,    15,    65,    55,    34,    55,
   154,   158,   172,    66,    68,    11,    15,    74,    34,    56,
    59,   190,    63,    86,    58,    11,    70,    56,    59,    77,
   285,    87,    39,    40,   142,    55,  -153,    49,  -149,    66,
    68,   220,   318,    74,   195,   145,   146,    60,    63,    82,
   154,   158,    70,    56,    59,    56,    59,    87,   154,   158,
    55,   145,   146,    49,    66,    68,   154,   158,    74,   194,
   132,    56,    59,    63,    86,    87,   177,    70,   222,   180,
    77,   181,   220,   221,    49,  -151,    55,    96,    49,  -148,
    66,    68,   139,    82,    74,  -166,   138,    56,    59,    63,
   187,    87,   246,    70,    55,  -150,   220,   245,    66,    68,
   291,   191,    74,   293,    49,    56,    59,    63,    86,    82,
  -152,    70,    56,    59,    77,  -150,    87,  -153,   193,   132,
    55,   108,    49,   202,    66,    68,    56,    59,    74,   264,
    87,   259,    97,    63,    86,   220,   221,    70,    55,   195,
    77,   103,    66,   213,   101,    55,    74,  -148,    49,    66,
    68,   116,   195,    74,    51,    70,    56,    59,    63,    55,
    87,    42,    70,    66,    68,  -151,    49,    74,   291,   322,
   197,   324,    63,    49,  -153,  -150,    70,  -148,    82,  -151,
  -149,   325,    56,    59,  -200,  -149,    87,    49,   327,    55,
   199,    35,   202,    66,    68,    49,   nil,    74,   nil,   nil,
   nil,   nil,    63,    86,    82,   nil,    70,    56,    59,    77,
   nil,    87,   nil,   nil,   nil,    55,   nil,    49,   nil,    66,
    68,   nil,   nil,    74,   nil,   nil,    56,    59,    63,    86,
   nil,   nil,    70,    56,    59,    77,   nil,    87,   nil,   nil,
    55,   nil,   nil,    49,    66,   118,   nil,   nil,    74,   nil,
   nil,   nil,   nil,   116,   nil,    82,   nil,    70,   nil,    55,
   nil,   nil,   nil,    66,   213,   nil,    55,    74,    49,   nil,
    66,    68,   116,   nil,    74,   nil,    70,    56,    59,    63,
    86,    87,   nil,    70,   nil,   nil,    77,    49,   nil,   nil,
   nil,   nil,   nil,   nil,    49,   nil,    56,    59,   nil,    82,
    87,   nil,    56,    59,   160,   144,   145,   146,   nil,   nil,
    55,   154,   158,   nil,    66,    68,   nil,   nil,    74,   nil,
   nil,   nil,   nil,    63,    86,   134,   nil,    70,   nil,    55,
    77,    56,    59,    66,   213,    55,   nil,    74,    49,    66,
    68,   nil,   116,    74,   nil,   nil,    70,    60,    63,    56,
    59,   nil,    70,    87,   nil,   nil,   nil,    49,   160,   144,
   145,   146,   nil,    49,    55,   154,   158,   nil,    66,   213,
   nil,    82,    74,   nil,   nil,    56,    59,   116,   nil,    87,
   nil,    70,    55,   nil,   nil,   nil,    66,    68,   nil,   nil,
    74,   nil,    49,   nil,   nil,    63,    86,    82,   nil,    70,
   nil,   nil,    77,   nil,   nil,    56,    59,   nil,    55,    87,
    49,   nil,    66,    68,   nil,   nil,    74,   nil,   nil,   nil,
   nil,    63,    86,   nil,   nil,    70,   nil,    82,    77,   nil,
   nil,    56,    59,   nil,   nil,    87,    49,   nil,    55,   nil,
   nil,   nil,    66,    68,   nil,   nil,    74,   nil,   nil,   nil,
   nil,    63,    86,    82,   nil,    70,   nil,   nil,    77,   nil,
   nil,    56,    59,   nil,    55,    87,    49,   nil,    66,    68,
   nil,   nil,    74,   nil,   nil,   nil,   nil,    63,    86,   nil,
   nil,    70,   nil,    82,    77,   nil,    56,    59,    56,    59,
    87,   nil,    49,   nil,    55,   nil,   nil,   nil,    66,    68,
   nil,   nil,    74,   nil,   nil,   nil,   nil,    63,    86,   nil,
   nil,    70,   nil,   nil,    77,   nil,   nil,   nil,   nil,    55,
   nil,    55,    49,    66,    68,    66,    68,    74,   nil,    74,
   nil,   nil,    63,    60,    63,   nil,    70,   nil,    70,    56,
    59,    56,    59,    87,   nil,    87,   nil,    49,    25,    49,
    30,     1,   nil,     8,    12,   nil,    19,   nil,    23,   nil,
    27,    82,     2,    82,   nil,    11,    15,   nil,   nil,   nil,
    56,    59,    55,   nil,    55,   nil,    66,    68,    66,    68,
    74,   nil,    74,   nil,   nil,    63,    86,    63,    86,    70,
   nil,    70,    77,   283,    77,    56,    59,    56,    59,    87,
    49,    87,    49,    55,   nil,   nil,   nil,    66,    68,   nil,
   nil,    74,   nil,   nil,   nil,    60,    63,    82,   nil,   nil,
    70,   nil,    56,    59,   nil,   nil,    87,   nil,    55,   nil,
    55,    49,    66,    68,    66,    68,    74,   nil,    74,   nil,
   nil,    63,    86,    63,    82,    70,   nil,    70,    77,    56,
    59,   nil,   nil,    87,   nil,    55,    49,   nil,    49,    66,
    68,   nil,   nil,    74,   nil,   nil,   nil,   nil,    63,    86,
    56,    59,    70,   nil,    87,    77,   nil,   nil,   nil,   nil,
   nil,   nil,    55,    49,   nil,   nil,    66,    68,   nil,   nil,
    74,   nil,    82,   nil,   nil,    63,    56,    59,   nil,    70,
    87,   nil,   nil,    55,   nil,   nil,   nil,    66,    68,   nil,
    49,    74,   nil,   nil,   nil,   nil,    63,    86,    82,   nil,
    70,   nil,   nil,    77,   nil,   nil,    56,    59,   nil,    55,
    87,    49,   nil,    66,    68,   nil,   nil,    74,   nil,   nil,
   nil,   nil,    63,    86,   nil,   nil,    70,   nil,    82,    77,
   nil,    56,    59,   nil,   nil,    87,   164,    49,   nil,    55,
   nil,    56,    59,    66,    68,    87,   nil,    74,   nil,   nil,
   nil,   nil,    63,    86,   nil,   nil,    70,   nil,   nil,    77,
   nil,   nil,    56,    59,    55,   nil,    87,    49,    66,    68,
   nil,   nil,    74,   nil,    55,   nil,   nil,    63,    66,    68,
   nil,    70,    74,   nil,    82,   nil,   nil,    63,   nil,    56,
    59,    70,    49,    87,   nil,    55,   nil,   nil,   nil,    66,
    68,   nil,    49,    74,   nil,   nil,   nil,   nil,    63,    86,
    56,    59,    70,   nil,   nil,    77,   nil,   295,   nil,   nil,
   nil,   nil,    55,    49,   nil,   nil,    66,    68,   nil,   nil,
    74,   nil,   nil,   nil,   nil,    63,   nil,   nil,   nil,    70,
   206,   207,   nil,    55,   nil,   nil,   nil,    66,   213,   nil,
    49,    74,   nil,   152,   157,   nil,   116,   159,   nil,   nil,
    70,   nil,   148,   150,   153,   156,   152,   157,   nil,   nil,
   nil,    49,   nil,   nil,   nil,   148,   150,   153,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   151,   155,   nil,   nil,
   160,   144,   145,   146,   147,   149,   nil,   154,   158,   151,
   155,   nil,   nil,   160,   144,   145,   146,   147,   149,   nil,
   154,   158,   152,   157,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   148,   150,   153,   156,   152,   157,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   148,   150,   153,   156,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   151,   155,   nil,   nil,   160,
   144,   145,   146,   147,   149,   nil,   154,   158,   151,   155,
   nil,   nil,   160,   144,   145,   146,   147,   149,   nil,   154,
   158,   152,   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   148,   150,   153,   156,   152,   157,   nil,   nil,   nil,   nil,
   nil,   nil,   244,   148,   150,   153,   156,   160,   144,   145,
   146,   147,   149,   nil,   154,   158,   nil,   nil,   160,   144,
   145,   146,   147,   149,   nil,   154,   158,   151,   155,   157,
   nil,   160,   144,   145,   146,   147,   149,   148,   154,   158,
   152,   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   148,
   150,   153,   156,   157,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   148,   nil,   157,   nil,   160,   144,   145,   146,   147,
   149,   148,   154,   158,   155,   157,   nil,   160,   144,   145,
   146,   147,   149,   148,   154,   158,   nil,   nil,   nil,   160,
   144,   145,   146,   147,   149,   nil,   154,   158,   nil,   160,
   144,   145,   146,   147,   149,   332,   154,   158,   nil,   nil,
   nil,   160,   144,   145,   146,   147,   149,   nil,   154,   158,
   nil,   nil,   nil,   nil,   242,   nil,    25,   nil,    30,     1,
   nil,     8,    12,   nil,    19,   nil,    23,   nil,    27,   nil,
     2,   nil,   nil,    11,    15,    25,   279,    30,     1,   nil,
     8,    12,   nil,    19,   nil,    23,   nil,    27,   nil,     2,
   nil,   nil,    11,    15,   nil,   271,   nil,    25,   nil,    30,
     1,   nil,     8,    12,   nil,    19,   nil,    23,   nil,    27,
   nil,     2,   nil,   nil,    11,    15,    25,   269,    30,     1,
   nil,     8,    12,   nil,    19,   nil,    23,   nil,    27,   nil,
     2,   nil,   nil,    11,    15,   nil,   290,   nil,    25,   nil,
    30,     1,   nil,     8,    12,   nil,    19,   nil,    23,   nil,
    27,   nil,     2,   nil,   nil,    11,    15,    25,   331,    30,
     1,   nil,     8,    12,   nil,    19,   nil,    23,   nil,    27,
   nil,     2,   nil,   nil,    11,    15,   nil,   329,   nil,    25,
   nil,    30,     1,   nil,     8,    12,   nil,    19,   nil,    23,
   nil,    27,   nil,     2,   nil,   nil,    11,    15,    25,   313,
    30,     1,   nil,     8,    12,   nil,    19,   nil,    23,   nil,
    27,   nil,     2,   nil,   nil,    11,    15,   nil,   314,   nil,
    25,   nil,    30,     1,   nil,     8,    12,   nil,    19,   nil,
    23,   nil,    27,   nil,     2,   nil,   nil,    11,    15,    25,
   316,    30,     1,   nil,     8,    12,   nil,    19,   nil,    23,
   nil,    27,   nil,     2,   nil,   nil,    11,    15,   nil,   333,
   nil,    25,   nil,    30,     1,   nil,     8,    12,   nil,    19,
   nil,    23,   nil,    27,   nil,     2,   nil,   nil,    11,    15,
    25,   nil,    30,     1,   nil,     8,    12,   nil,    19,   nil,
    23,   nil,    27,   nil,     2,   nil,   nil,    11,    15,   160,
   144,   145,   146,   147,   149,   nil,   154,   158 ]

racc_action_check = [
   138,   138,   165,   165,   251,   132,   138,    44,    68,    98,
   184,   118,     1,   168,   260,   128,   182,   168,   168,     1,
    98,   142,   142,   184,   118,    98,    68,   144,   144,   251,
   251,   144,    44,   138,    19,   165,   186,   138,   138,   165,
   165,   138,   135,   165,   142,    95,   138,   132,   165,   144,
   138,    93,   165,   128,   142,   135,   128,   192,   142,   142,
   144,   138,   142,   165,   144,   144,   142,   142,   144,   319,
   319,   142,    19,   144,   144,    19,   128,   144,   225,    92,
   144,   253,   142,   296,   296,   285,   285,   126,   144,   285,
   171,   225,   253,    94,    91,    19,    12,   253,   171,    28,
   249,    28,   319,    12,    94,   195,   319,   319,   249,    94,
   319,   196,   103,   179,    28,   319,   296,   103,   285,   319,
   296,   296,   285,   285,   296,   126,   285,   265,   126,   296,
   319,   285,   265,   296,   197,   285,   145,   145,    28,    90,
   145,   179,   179,    89,   296,   202,   285,     5,   126,     5,
     5,   203,     5,     5,    85,     5,   167,     5,   145,     5,
    81,     5,    23,    23,     5,     5,    23,   167,     3,   145,
   227,   227,   167,   145,   145,     3,     3,   145,   108,    30,
    30,   108,   145,   145,    23,   108,   145,    25,    25,   145,
   210,    25,     8,     8,   213,    23,    79,   145,    76,    23,
    23,   287,   287,    23,   178,   226,   226,    23,    23,    25,
   226,   226,    23,    27,    27,   180,   180,    27,   228,   228,
    25,   243,   243,    23,    25,    25,   243,   243,    25,   177,
   175,   146,   146,    25,    25,   146,    97,    25,   141,   100,
    25,   101,   141,   141,   158,    73,    27,    72,    25,    71,
    27,    27,    64,   146,    27,    63,    62,   147,   147,    27,
   104,   147,   163,    27,   146,    61,   163,   163,   146,   146,
   242,   109,   146,   245,    27,   257,   257,   146,   146,   147,
    54,   146,   267,   267,   146,   115,   267,    53,   117,    51,
   147,    41,   146,   258,   147,   147,   263,   263,   147,   183,
   263,   176,    37,   147,   147,   176,   176,   147,   257,   119,
   147,    33,   257,   257,    32,   267,   257,   120,   147,   267,
   267,   257,   277,   267,    22,   257,    39,    39,   267,   263,
    39,    16,   267,   263,   263,   122,   257,   263,   290,   291,
   123,   297,   263,   267,   300,   302,   263,   304,    39,   305,
   306,   308,    40,    40,   318,   124,    40,   263,   320,    39,
   127,     2,   133,    39,    39,   154,   nil,    39,   nil,   nil,
   nil,   nil,    39,    39,    40,   nil,    39,    42,    42,    39,
   nil,    42,   nil,   nil,   nil,    40,   nil,    39,   nil,    40,
    40,   nil,   nil,    40,   nil,   nil,   256,   256,    40,    40,
   nil,   nil,    40,   148,   148,    40,   nil,   148,   nil,   nil,
    42,   nil,   nil,    40,    42,    42,   nil,   nil,    42,   nil,
   nil,   nil,   nil,    42,   nil,   148,   nil,    42,   nil,   256,
   nil,   nil,   nil,   256,   256,   nil,   148,   256,    42,   nil,
   148,   148,   256,   nil,   148,   nil,   256,   149,   149,   148,
   148,   149,   nil,   148,   nil,   nil,   148,   256,   nil,   nil,
   nil,   nil,   nil,   nil,   148,   nil,   193,   193,   nil,   149,
   193,   nil,    58,    58,   229,   229,   229,   229,   nil,   nil,
   149,   229,   229,   nil,   149,   149,   nil,   nil,   149,   nil,
   nil,   nil,   nil,   149,   149,    58,   nil,   149,   nil,   193,
   149,   215,   215,   193,   193,    58,   nil,   193,   149,    58,
    58,   nil,   193,    58,   nil,   nil,   193,    58,    58,    59,
    59,   nil,    58,    59,   nil,   nil,   nil,   193,   231,   231,
   231,   231,   nil,    58,   215,   231,   231,   nil,   215,   215,
   nil,    59,   215,   nil,   nil,   150,   150,   215,   nil,   150,
   nil,   215,    59,   nil,   nil,   nil,    59,    59,   nil,   nil,
    59,   nil,   215,   nil,   nil,    59,    59,   150,   nil,    59,
   nil,   nil,    59,   nil,   nil,   151,   151,   nil,   150,   151,
    59,   nil,   150,   150,   nil,   nil,   150,   nil,   nil,   nil,
   nil,   150,   150,   nil,   nil,   150,   nil,   151,   150,   nil,
   nil,   152,   152,   nil,   nil,   152,   150,   nil,   151,   nil,
   nil,   nil,   151,   151,   nil,   nil,   151,   nil,   nil,   nil,
   nil,   151,   151,   152,   nil,   151,   nil,   nil,   151,   nil,
   nil,   153,   153,   nil,   152,   153,   151,   nil,   152,   152,
   nil,   nil,   152,   nil,   nil,   nil,   nil,   152,   152,   nil,
   nil,   152,   nil,   153,   152,   nil,    65,    65,   139,   139,
    65,   nil,   152,   nil,   153,   nil,   nil,   nil,   153,   153,
   nil,   nil,   153,   nil,   nil,   nil,   nil,   153,   153,   nil,
   nil,   153,   nil,   nil,   153,   nil,   nil,   nil,   nil,    65,
   nil,   139,   153,    65,    65,   139,   139,    65,   nil,   139,
   nil,   nil,    65,   139,   139,   nil,    65,   nil,   139,   155,
   155,   156,   156,   155,   nil,   156,   nil,    65,     0,   139,
     0,     0,   nil,     0,     0,   nil,     0,   nil,     0,   nil,
     0,   155,     0,   156,   nil,     0,     0,   nil,   nil,   nil,
   204,   204,   155,   nil,   156,   nil,   155,   155,   156,   156,
   155,   nil,   156,   nil,   nil,   155,   155,   156,   156,   155,
   nil,   156,   155,   204,   156,   157,   157,   223,   223,   157,
   155,   223,   156,   204,   nil,   nil,   nil,   204,   204,   nil,
   nil,   204,   nil,   nil,   nil,   204,   204,   157,   nil,   nil,
   204,   nil,    77,    77,   nil,   nil,    77,   nil,   157,   nil,
   223,   204,   157,   157,   223,   223,   157,   nil,   223,   nil,
   nil,   157,   157,   223,    77,   157,   nil,   223,   157,    96,
    96,   nil,   nil,    96,   nil,    77,   157,   nil,   223,    77,
    77,   nil,   nil,    77,   nil,   nil,   nil,   nil,    77,    77,
   206,   206,    77,   nil,   206,    77,   nil,   nil,   nil,   nil,
   nil,   nil,    96,    77,   nil,   nil,    96,    96,   nil,   nil,
    96,   nil,   206,   nil,   nil,    96,    82,    82,   nil,    96,
    82,   nil,   nil,   206,   nil,   nil,   nil,   206,   206,   nil,
    96,   206,   nil,   nil,   nil,   nil,   206,   206,    82,   nil,
   206,   nil,   nil,   206,   nil,   nil,    86,    86,   nil,    82,
    86,   206,   nil,    82,    82,   nil,   nil,    82,   nil,   nil,
   nil,   nil,    82,    82,   nil,   nil,    82,   nil,    86,    82,
   nil,    87,    87,   nil,   nil,    87,    87,    82,   nil,    86,
   nil,   201,   201,    86,    86,   201,   nil,    86,   nil,   nil,
   nil,   nil,    86,    86,   nil,   nil,    86,   nil,   nil,    86,
   nil,   nil,   160,   160,    87,   nil,   160,    86,    87,    87,
   nil,   nil,    87,   nil,   201,   nil,   nil,    87,   201,   201,
   nil,    87,   201,   nil,   160,   nil,   nil,   201,   nil,   194,
   194,   201,    87,   194,   nil,   160,   nil,   nil,   nil,   160,
   160,   nil,   201,   160,   nil,   nil,   nil,   nil,   160,   160,
   247,   247,   160,   nil,   nil,   160,   nil,   247,   nil,   nil,
   nil,   nil,   194,   160,   nil,   nil,   194,   194,   nil,   nil,
   194,   nil,   nil,   nil,   nil,   194,   nil,   nil,   nil,   194,
   136,   136,   nil,   247,   nil,   nil,   nil,   247,   247,   nil,
   194,   247,   nil,   136,   136,   nil,   247,    80,   nil,   nil,
   247,   nil,   136,   136,   136,   136,    80,    80,   nil,   nil,
   nil,   247,   nil,   nil,   nil,    80,    80,    80,    80,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   136,   136,   nil,   nil,
   136,   136,   136,   136,   136,   136,   nil,   136,   136,    80,
    80,   nil,   nil,    80,    80,    80,    80,    80,    80,   nil,
    80,    80,   106,   106,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   106,   106,   106,   106,   105,   105,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   105,   105,   105,   105,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   106,   106,   nil,   nil,   106,
   106,   106,   106,   106,   106,   nil,   106,   106,   105,   105,
   nil,   nil,   105,   105,   105,   105,   105,   105,   nil,   105,
   105,   237,   237,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   237,   237,   237,   237,   161,   161,   nil,   nil,   nil,   nil,
   nil,   nil,   161,   161,   161,   161,   161,   230,   230,   230,
   230,   230,   230,   nil,   230,   230,   nil,   nil,   237,   237,
   237,   237,   237,   237,   nil,   237,   237,   161,   161,   234,
   nil,   161,   161,   161,   161,   161,   161,   234,   161,   161,
   233,   233,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   233,
   233,   233,   233,   232,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   232,   nil,   235,   nil,   234,   234,   234,   234,   234,
   234,   235,   234,   234,   233,   238,   nil,   233,   233,   233,
   233,   233,   233,   238,   233,   233,   nil,   nil,   nil,   232,
   232,   232,   232,   232,   232,   nil,   232,   232,   nil,   235,
   235,   235,   235,   235,   235,   328,   235,   235,   nil,   nil,
   nil,   238,   238,   238,   238,   238,   238,   nil,   238,   238,
   nil,   nil,   nil,   nil,   159,   nil,   328,   nil,   328,   328,
   nil,   328,   328,   nil,   328,   nil,   328,   nil,   328,   nil,
   328,   nil,   nil,   328,   328,   159,   199,   159,   159,   nil,
   159,   159,   nil,   159,   nil,   159,   nil,   159,   nil,   159,
   nil,   nil,   159,   159,   nil,   191,   nil,   199,   nil,   199,
   199,   nil,   199,   199,   nil,   199,   nil,   199,   nil,   199,
   nil,   199,   nil,   nil,   199,   199,   191,   187,   191,   191,
   nil,   191,   191,   nil,   191,   nil,   191,   nil,   191,   nil,
   191,   nil,   nil,   191,   191,   nil,   241,   nil,   187,   nil,
   187,   187,   nil,   187,   187,   nil,   187,   nil,   187,   nil,
   187,   nil,   187,   nil,   nil,   187,   187,   241,   324,   241,
   241,   nil,   241,   241,   nil,   241,   nil,   241,   nil,   241,
   nil,   241,   nil,   nil,   241,   241,   nil,   322,   nil,   324,
   nil,   324,   324,   nil,   324,   324,   nil,   324,   nil,   324,
   nil,   324,   nil,   324,   nil,   nil,   324,   324,   322,   268,
   322,   322,   nil,   322,   322,   nil,   322,   nil,   322,   nil,
   322,   nil,   322,   nil,   nil,   322,   322,   nil,   270,   nil,
   268,   nil,   268,   268,   nil,   268,   268,   nil,   268,   nil,
   268,   nil,   268,   nil,   268,   nil,   nil,   268,   268,   270,
   278,   270,   270,   nil,   270,   270,   nil,   270,   nil,   270,
   nil,   270,   nil,   270,   nil,   nil,   270,   270,   nil,   330,
   nil,   278,   nil,   278,   278,   nil,   278,   278,   nil,   278,
   nil,   278,   nil,   278,   nil,   278,   nil,   nil,   278,   278,
   330,   nil,   330,   330,   nil,   330,   330,   nil,   330,   nil,
   330,   nil,   330,   nil,   330,   nil,   nil,   330,   330,   239,
   239,   239,   239,   239,   239,   nil,   239,   239 ]

racc_action_pointer = [
   688,   -28,   317,   128,   nil,   117,   nil,   nil,   177,   nil,
   nil,   nil,    56,   nil,   nil,   nil,   323,   nil,   nil,    32,
   nil,   nil,   316,   160,   nil,   185,   nil,   211,    93,   nil,
   177,   nil,   314,   287,   nil,   nil,   nil,   294,   nil,   324,
   350,   254,   375,   nil,    -5,   nil,   nil,   nil,   nil,   nil,
   nil,   249,   nil,   264,   257,   nil,   nil,   nil,   470,   517,
   nil,   242,   233,   249,   240,   654,   nil,   nil,     2,   nil,
   nil,   226,   241,   222,   nil,   nil,   175,   790,   nil,   173,
  1039,   137,   864,   nil,   nil,   131,   894,   919,   nil,   120,
   116,    71,    56,    43,    69,    37,   817,   196,   -15,   nil,
   227,   241,   nil,    77,   252,  1098,  1085,   nil,   138,   263,
   nil,   nil,   nil,   nil,   nil,   262,   nil,   247,     0,   297,
   294,   nil,   312,   320,   332,   nil,    85,   352,    13,   nil,
   nil,   nil,    -6,   350,   nil,    30,  1026,   nil,    -2,   656,
   nil,   231,    19,   nil,    25,   134,   229,   255,   401,   445,
   543,   573,   599,   629,   302,   707,   709,   763,   181,  1295,
   950,  1157,   nil,   255,   nil,     0,   nil,   132,   -33,   nil,
   nil,    72,   nil,   nil,   nil,   190,   294,   218,   192,    91,
   213,   nil,     1,   274,    -2,   nil,    21,  1358,   nil,   nil,
   nil,  1336,    48,   464,   977,    65,   102,    94,   nil,  1317,
   nil,   929,   105,   142,   738,   nil,   838,   nil,   nil,   nil,
   179,   nil,   nil,   170,   nil,   499,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   765,   nil,    66,   149,   109,   157,   420,
  1133,   474,  1215,  1203,  1191,  1225,   nil,  1144,  1237,  1495,
   nil,  1377,   239,   165,   nil,   266,   nil,   998,   nil,    88,
   nil,   -21,   nil,    57,   nil,   nil,   394,   273,   281,   nil,
     5,   nil,   nil,   294,   nil,    92,   nil,   280,  1440,   nil,
  1459,   nil,   nil,   nil,   nil,   nil,   nil,   310,  1481,   nil,
   nil,   nil,   nil,   nil,   nil,    83,   nil,   190,   nil,   nil,
   307,   331,   nil,   nil,   nil,   nil,    81,   333,   nil,   nil,
   321,   nil,   322,   nil,   324,   326,   327,   nil,   342,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   345,    67,
   349,   nil,  1418,   nil,  1399,   nil,   nil,   nil,  1276,   nil,
  1500,   nil,   nil,   nil ]

racc_action_default = [
  -176,  -202,   -39,  -202,   -13,    -1,   -14,    -2,  -202,   -15,
    -3,  -168,  -202,   -16,    -5,  -166,  -202,   -17,    -6,  -202,
    -7,    -8,  -202,  -167,    -9,  -202,   -10,  -202,  -202,   -11,
  -202,   -12,  -202,  -176,  -167,   -40,   -38,  -202,    -4,  -202,
  -202,  -176,   -72,  -175,  -176,  -173,  -169,  -171,  -172,  -201,
  -174,   -79,  -156,   -29,   -30,  -193,  -102,   -31,  -202,  -202,
   -33,   -32,  -202,   -63,   -21,  -202,  -107,   -22,   -62,   -23,
   -61,   -26,  -202,   -27,  -155,  -154,   -28,  -202,   -96,   -93,
  -202,   -98,  -202,   -94,  -115,   -90,  -202,  -202,   -97,   -91,
   -95,   -99,   -92,  -202,  -176,   -42,  -202,   -72,  -176,  -157,
  -159,  -202,  -178,  -177,  -202,   -70,   -71,  -189,  -202,  -202,
  -153,   -69,  -152,   -73,   -67,   -64,   -63,   -59,   -62,  -199,
   -65,   -57,   -68,  -202,   -66,  -187,  -202,  -202,  -202,   -77,
   -78,   -80,  -202,  -199,   -20,  -202,  -202,  -103,  -202,  -202,
   -82,  -202,  -202,  -124,  -202,  -202,  -202,  -202,  -202,  -202,
  -202,  -202,  -202,  -202,  -202,  -202,  -202,  -202,  -202,  -202,
  -202,  -202,  -131,  -202,  -196,  -202,   -45,  -176,  -202,   -46,
   -48,  -202,   -62,   -55,   -54,   -79,  -202,  -202,  -199,  -202,
  -202,   334,  -186,  -202,  -202,  -181,  -184,  -202,  -191,  -190,
  -192,  -202,  -202,   -60,  -202,  -200,  -202,   -72,  -170,  -202,
  -188,  -202,  -200,  -202,  -202,   -18,  -202,  -105,  -104,  -150,
  -202,  -142,  -143,   -62,  -148,  -202,  -151,  -149,   -24,   -25,
  -197,  -198,  -108,  -202,  -101,  -202,  -119,  -121,  -120,  -122,
  -126,  -123,  -128,  -133,  -130,  -127,  -116,  -132,  -129,  -125,
  -117,  -202,  -112,  -118,  -134,  -198,  -194,  -202,  -136,  -202,
  -140,  -202,   -43,  -202,   -51,   -50,  -202,  -202,  -199,  -109,
  -202,   -44,  -158,  -202,  -179,  -202,  -180,  -202,  -202,  -161,
  -202,  -163,   -34,   -58,   -75,   -74,   -35,  -199,  -202,  -165,
   -76,   -81,   -37,   -19,  -106,  -202,  -145,  -199,   -83,  -100,
  -112,  -202,  -111,  -195,  -137,  -135,  -202,  -202,   -49,   -47,
   -87,   -88,   -84,   -52,   -85,   -89,   -86,   -53,  -202,   -36,
  -185,  -182,  -183,  -160,  -162,   -56,  -164,  -147,  -198,  -202,
  -202,  -110,  -202,  -141,  -202,   -41,  -146,  -144,  -202,  -114,
  -202,  -139,  -113,  -138 ]

racc_goto_table = [
    28,    22,   212,    37,   185,    28,    22,   119,   137,    38,
   111,     5,   121,   129,    61,    46,    75,   133,    33,    64,
   248,    99,    93,    57,    69,   218,   168,   292,     7,    41,
   179,    53,    32,   115,   141,    75,   210,   303,   307,   208,
   281,   319,   114,   247,   299,    95,   211,   192,   287,    61,
   110,    75,   100,   104,   135,   109,   163,    44,    57,    69,
   140,   102,   178,   250,   127,   176,    53,   117,    43,   107,
   200,   183,   125,   184,    36,   321,   189,   nil,   nil,   286,
   nil,   nil,   140,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   218,   140,   nil,   nil,   nil,   196,   nil,   nil,   nil,   251,
   nil,   nil,   294,   nil,   nil,   nil,   nil,   nil,   nil,   203,
   nil,   nil,   nil,   210,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   198,   nil,   nil,   188,   nil,   nil,   nil,   209,
    61,    75,    75,    61,   nil,    75,   nil,   129,   225,    57,
   219,   258,    57,    69,   nil,   250,   110,    53,   nil,   nil,
    53,   nil,   nil,   nil,   260,   284,   209,   275,    75,    28,
    22,   111,   277,   273,   129,   nil,   311,   nil,   nil,   nil,
   241,   262,   nil,   110,   nil,    43,   nil,    43,   nil,   nil,
   nil,   nil,   nil,   326,   115,   nil,    75,    28,    22,   274,
   nil,    28,    22,   114,   323,    61,   280,    75,   268,    28,
    22,   110,   270,   236,    57,   219,   209,   240,    75,   nil,
   278,   nil,    53,   nil,   nil,   nil,   nil,   210,   288,   nil,
   nil,   nil,   nil,   110,    73,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    71,   nil,   308,   nil,   nil,   nil,   209,   nil,
    75,    28,    22,   122,   nil,    38,   nil,   302,   302,    75,
    75,   120,   nil,   315,   nil,   110,   301,   301,   310,    73,
   nil,   nil,   312,   320,   300,   300,   nil,    71,    28,    22,
    28,    22,    38,   nil,    38,   nil,   nil,   nil,    28,    22,
   317,   nil,    38,   nil,   nil,   nil,   nil,   209,   nil,    75,
   nil,   nil,   nil,   nil,   nil,   174,   nil,   nil,   nil,   174,
   nil,   nil,    76,   173,   110,   nil,   nil,   173,   nil,   nil,
   209,   nil,    75,   nil,   nil,   nil,   nil,    54,   nil,   nil,
   nil,   124,    28,    22,    28,    22,   nil,   110,    28,    22,
    28,    22,    38,   328,    38,   330,   112,    76,   nil,   216,
    73,   nil,   nil,    73,   nil,   nil,   nil,   214,    71,   nil,
   nil,    71,    54,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   216,   nil,   174,   nil,
   nil,   nil,   nil,   nil,   214,   nil,   173,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   122,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   120,   nil,   nil,    73,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    71,   nil,   nil,   216,   217,    76,   nil,
   nil,    76,   nil,   nil,   214,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   112,    54,   nil,   nil,    54,   nil,    80,   nil,
   nil,   nil,   nil,   nil,   217,   nil,   nil,   nil,   216,   nil,
   nil,   nil,   105,   106,   174,   nil,   214,   305,   305,   112,
   nil,   nil,   173,   nil,   nil,   304,   304,   nil,   nil,   nil,
   nil,   nil,   124,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    76,   nil,   nil,   nil,   112,   nil,   nil,
   143,   nil,   nil,   nil,   217,   161,   nil,   216,    54,   162,
   nil,   nil,   nil,   nil,   nil,   214,   nil,   nil,   nil,   112,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   216,   nil,   nil,   nil,   nil,   nil,   217,   nil,   214,   nil,
   nil,   nil,   nil,   nil,   nil,   306,   306,   nil,   nil,   nil,
   nil,   112,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   112,   112,   nil,   nil,   nil,   nil,   nil,   226,   227,   228,
   229,   230,   231,   232,   233,   234,   235,   nil,   237,   238,
   239,   nil,   nil,   243,   nil,   217,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   112,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   217,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   112 ]

racc_goto_check = [
    33,    20,    63,    33,    74,    33,    20,    31,    54,     4,
    46,     2,    43,    48,    27,    70,    45,    34,    28,    18,
    59,    27,    49,    26,    20,    19,    37,    56,     3,    28,
    37,    24,     1,    27,    52,    45,    61,    42,    42,    55,
    51,    53,    26,    58,    38,    36,    62,    30,    64,    27,
    24,    45,    65,    66,    18,    67,    52,    68,    26,    20,
    49,     3,    31,    61,    69,    52,    24,    29,    57,     3,
    71,    72,     3,    73,     5,    56,    75,   nil,   nil,    63,
   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,    49,   nil,   nil,   nil,    32,   nil,   nil,   nil,    37,
   nil,   nil,    59,   nil,   nil,   nil,   nil,   nil,   nil,    32,
   nil,   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    70,   nil,   nil,    28,   nil,   nil,   nil,    27,
    27,    45,    45,    27,   nil,    45,   nil,    48,    18,    26,
    20,    34,    26,    20,   nil,    61,    24,    24,   nil,   nil,
    24,   nil,   nil,   nil,    32,    54,    27,    48,    45,    33,
    20,    46,    31,    43,    48,   nil,    74,   nil,   nil,   nil,
     2,    27,   nil,    24,   nil,    57,   nil,    57,   nil,   nil,
   nil,   nil,   nil,    63,    27,   nil,    45,    33,    20,    49,
   nil,    33,    20,    26,    61,    27,    49,    45,     2,    33,
    20,    24,     2,    57,    26,    20,    27,    57,    45,   nil,
     2,   nil,    24,   nil,   nil,   nil,   nil,    61,    49,   nil,
   nil,   nil,   nil,    24,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,    32,   nil,   nil,   nil,    27,   nil,
    45,    33,    20,    22,   nil,     4,   nil,    27,    27,    45,
    45,    21,   nil,    32,   nil,    24,    26,    26,    49,    22,
   nil,   nil,    49,    32,    24,    24,   nil,    21,    33,    20,
    33,    20,     4,   nil,     4,   nil,   nil,   nil,    33,    20,
    49,   nil,     4,   nil,   nil,   nil,   nil,    27,   nil,    45,
   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,    22,
   nil,   nil,    23,    21,    24,   nil,   nil,    21,   nil,   nil,
    27,   nil,    45,   nil,   nil,   nil,   nil,    25,   nil,   nil,
   nil,    23,    33,    20,    33,    20,   nil,    24,    33,    20,
    33,    20,     4,     2,     4,     2,    25,    23,   nil,    22,
    22,   nil,   nil,    22,   nil,   nil,   nil,    21,    21,   nil,
   nil,    21,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,    22,   nil,
   nil,   nil,   nil,   nil,    21,   nil,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,    22,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,    22,    23,    23,   nil,
   nil,    23,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    25,    25,   nil,   nil,    25,   nil,    47,   nil,
   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,    22,   nil,
   nil,   nil,    47,    47,    22,   nil,    21,    22,    22,    25,
   nil,   nil,    21,   nil,   nil,    21,    21,   nil,   nil,   nil,
   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,   nil,   nil,    25,   nil,   nil,
    47,   nil,   nil,   nil,    23,    47,   nil,    22,    25,    47,
   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,    23,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,    23,    23,   nil,   nil,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    25,    25,   nil,   nil,   nil,   nil,   nil,    47,    47,    47,
    47,    47,    47,    47,    47,    47,    47,   nil,    47,    47,
    47,   nil,   nil,    47,   nil,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    25 ]

racc_goto_pointer = [
   nil,    32,    11,    28,     4,    71,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -4,  -114,
     1,   209,   201,   279,     8,   294,     0,    -9,    17,    25,
   -70,   -35,   -24,     0,   -34,   nil,    17,   -68,  -209,   nil,
   nil,   nil,  -219,   -30,   nil,    -7,   -32,   413,   -38,    -5,
   nil,  -162,   -31,  -246,   -51,   -97,  -215,    49,  -122,  -145,
   nil,  -102,   -92,  -136,  -167,    22,    20,    14,    38,    20,
    -4,   -58,   -32,   -30,   -99,   -32 ]

racc_goto_default = [
   nil,   nil,   nil,   166,    10,    14,    18,    20,    21,    24,
    26,    29,    31,     4,     6,     9,    13,    17,   nil,    67,
    88,    89,    90,    92,    79,    81,    83,    85,    16,   nil,
   nil,   nil,   nil,    72,   nil,     3,   nil,   nil,   169,   253,
   170,   171,   nil,   nil,   123,    91,    78,   136,   113,    84,
   130,   131,   nil,   223,   nil,   nil,   nil,    52,   nil,   nil,
   249,    62,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :DQPRE => 3,
 :DQMID => 4,
 :DQPOST => 5,
 :LBRACK => 6,
 :RBRACK => 7,
 :LBRACE => 8,
 :RBRACE => 9,
 :SYMBOL => 10,
 :FARROW => 11,
 :COMMA => 12,
 :TRUE => 13,
 :FALSE => 14,
 :EQUALS => 15,
 :APPENDS => 16,
 :LESSEQUAL => 17,
 :NOTEQUAL => 18,
 :DOT => 19,
 :COLON => 20,
 :LLCOLLECT => 21,
 :RRCOLLECT => 22,
 :QMARK => 23,
 :LPAREN => 24,
 :RPAREN => 25,
 :ISEQUAL => 26,
 :GREATEREQUAL => 27,
 :GREATERTHAN => 28,
 :LESSTHAN => 29,
 :IF => 30,
 :ELSE => 31,
 :IMPORT => 32,
 :DEFINE => 33,
 :ELSIF => 34,
 :VARIABLE => 35,
 :CLASS => 36,
 :INHERITS => 37,
 :NODE => 38,
 :BOOLEAN => 39,
 :NAME => 40,
 :SEMIC => 41,
 :CASE => 42,
 :DEFAULT => 43,
 :AT => 44,
 :LCOLLECT => 45,
 :RCOLLECT => 46,
 :CLASSNAME => 47,
 :CLASSREF => 48,
 :NOT => 49,
 :OR => 50,
 :AND => 51,
 :UNDEF => 52,
 :PARROW => 53,
 :PLUS => 54,
 :MINUS => 55,
 :TIMES => 56,
 :DIV => 57,
 :LSHIFT => 58,
 :RSHIFT => 59,
 :UMINUS => 60,
 :MATCH => 61,
 :NOMATCH => 62,
 :REGEX => 63 }

racc_use_result_var = true

racc_nt_base = 64

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'DQPRE',
'DQMID',
'DQPOST',
'LBRACK',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'funcvalues',
'namestring',
'resourceref',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'dqrval',
'dqtail',
'else',
'regex',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'nodename',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 45
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 61
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

module_eval <<'.,.,', 'grammar.ra', 85
  def _reduce_18( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 93
  def _reduce_19( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 99
  def _reduce_20( val, _values, result )
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 107
  def _reduce_21( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0][:value],
        :line => val[0][:line],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 22 omitted

 # reduce 23 omitted

module_eval <<'.,.,', 'grammar.ra', 115
  def _reduce_24( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 124
  def _reduce_25( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

 # reduce 31 omitted

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 137
  def _reduce_33( val, _values, result )
                    result = ast AST::Name, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 159
  def _reduce_34( val, _values, result )
    @lexer.commentpop
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 162
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 165
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 171
  def _reduce_37( val, _values, result )
    @lexer.commentpop
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 198
  def _reduce_38( val, _values, result )
    type = val[0]

    if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect without storeconfigs being set")
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 200
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 224
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    args[:override] = val[3]
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 243
  def _reduce_42( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type }

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
        Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 253
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 261
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 275
  def _reduce_49( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_50( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_51( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 284
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 296
  def _reduce_56( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 306
  def _reduce_58( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 59 omitted

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 313
  def _reduce_61( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 317
  def _reduce_62( val, _values, result )
    result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_63( val, _values, result )
    result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 337
  def _reduce_70( val, _values, result )
    if val[0][:value] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
    result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 342
  def _reduce_71( val, _values, result )
    variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
    result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 347
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 347
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 356
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 360
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 365
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 382
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 418
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0][:value], :line => val[0][:line],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 423
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0][:value], :line => val[0][:line],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 424
  def _reduce_102( val, _values, result )
 result = ast AST::String, :value => val[0][:value],                  :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 425
  def _reduce_103( val, _values, result )
 result = ast AST::Concat, :value => [ast(AST::String,val[0])]+val[1], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 427
  def _reduce_104( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 429
  def _reduce_105( val, _values, result )
 result = [ast(AST::String,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 430
  def _reduce_106( val, _values, result )
 result = [ast(AST::String,val[0])] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_107( val, _values, result )
    result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_108( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 442
  def _reduce_109( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_110( val, _values, result )
    @lexer.commentpop
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 469
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    args = {
        :test => val[1],
        :statements => ast(AST::Nop)
    }

    if val[4]
        args[:else] = val[4]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 475
  def _reduce_113( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 479
  def _reduce_114( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 115 omitted

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_116( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_117( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 502
  def _reduce_118( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 505
  def _reduce_119( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 508
  def _reduce_120( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_121( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 514
  def _reduce_122( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 517
  def _reduce_123( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 520
  def _reduce_124( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_125( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_126( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 529
  def _reduce_127( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_128( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 535
  def _reduce_129( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 538
  def _reduce_130( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 541
  def _reduce_131( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 544
  def _reduce_132( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 547
  def _reduce_133( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 550
  def _reduce_134( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 559
  def _reduce_135( val, _values, result )
    @lexer.commentpop
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 136 omitted

module_eval <<'.,.,', 'grammar.ra', 569
  def _reduce_137( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 574
  def _reduce_138( val, _values, result )
    @lexer.commentpop
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 580
  def _reduce_139( val, _values, result )
    @lexer.commentpop
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 590
  def _reduce_141( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 594
  def _reduce_142( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 143 omitted

module_eval <<'.,.,', 'grammar.ra', 600
  def _reduce_144( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 145 omitted

module_eval <<'.,.,', 'grammar.ra', 610
  def _reduce_146( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 614
  def _reduce_147( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 148 omitted

 # reduce 149 omitted

 # reduce 150 omitted

 # reduce 151 omitted

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

module_eval <<'.,.,', 'grammar.ra', 625
  def _reduce_155( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 156 omitted

module_eval <<'.,.,', 'grammar.ra', 628
  def _reduce_157( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 632
  def _reduce_158( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 640
  def _reduce_159( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 651
  def _reduce_160( val, _values, result )
    @lexer.commentpop
    newdefine classname(val[1]), :arguments => val[2], :code => val[4], :line => val[0][:line]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 656
  def _reduce_161( val, _values, result )
    @lexer.commentpop
    newdefine classname(val[1]), :arguments => val[2], :line => val[0][:line]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 665
  def _reduce_162( val, _values, result )
    @lexer.commentpop
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 671
  def _reduce_163( val, _values, result )
    @lexer.commentpop
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 677
  def _reduce_164( val, _values, result )
    @lexer.commentpop
    newnode val[1], :parent => val[2], :code => val[4], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 681
  def _reduce_165( val, _values, result )
    @lexer.commentpop
    newnode val[1], :parent => val[2], :line => val[0][:line]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 682
  def _reduce_166( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 684
  def _reduce_167( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 685
  def _reduce_168( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 169 omitted

module_eval <<'.,.,', 'grammar.ra', 695
  def _reduce_170( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 699
  def _reduce_171( val, _values, result )
    result = ast AST::HostName, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 700
  def _reduce_172( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 701
  def _reduce_173( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 702
  def _reduce_174( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 175 omitted

module_eval <<'.,.,', 'grammar.ra', 708
  def _reduce_176( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 712
  def _reduce_177( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 178 omitted

module_eval <<'.,.,', 'grammar.ra', 717
  def _reduce_179( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 721
  def _reduce_180( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 181 omitted

module_eval <<'.,.,', 'grammar.ra', 728
  def _reduce_182( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 733
  def _reduce_183( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 737
  def _reduce_184( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 739
  def _reduce_185( val, _values, result )
    result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 741
  def _reduce_186( val, _values, result )
    result = [val[0][:value]]
   result
  end
.,.,

 # reduce 187 omitted

module_eval <<'.,.,', 'grammar.ra', 746
  def _reduce_188( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 189 omitted

module_eval <<'.,.,', 'grammar.ra', 751
  def _reduce_190( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 191 omitted

 # reduce 192 omitted

module_eval <<'.,.,', 'grammar.ra', 757
  def _reduce_193( val, _values, result )
    result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 765
  def _reduce_194( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 772
  def _reduce_195( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 774
  def _reduce_196( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 197 omitted

 # reduce 198 omitted

 # reduce 199 omitted

module_eval <<'.,.,', 'grammar.ra', 779
  def _reduce_200( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 784
  def _reduce_201( val, _values, result )
    result = ast AST::Regex, :value => val[0][:value]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
